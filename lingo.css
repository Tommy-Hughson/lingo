:root {}

* {
  font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
  box-sizing: border-box;
}

html {
  height: 100vh;
}


.flex,
.box,
.grid,
body,
.row,
.controls,
.container {
  display: flex;
  justify-content: center;
  align-items: center;
}

body {
  user-select: none;
  margin: 0;
  padding: 0;
  height: 100%;
  background: #0c0c0d;
  color: transparent;

  flex-direction: column;
}

.container {
  position: relative;
  flex-direction: column;
}

.grid,
.row {
  gap: min(1vw, 1vh, 5px);
}

.grid {
  flex-direction: column;
  margin-bottom: 10px;
}

.box {
  width: min(18vw, 10vh, 70px);
  aspect-ratio: 1;
  border: 2px solid #282829;
  text-transform: capitalize;
  font-size: min(9vw, 6vh, 37px);
  font-weight: 700;
  transition: border-color 0.1s;
}

.filled {
  color: white;
  animation: letter-input 0.1s 1;
  border-color: #5e5e5e;
}

@keyframes letter-input {
  50% {
    transform: scale(1.05)
  }
}

.placeholder {
  color: rgba(255, 255, 255, 0.459);
  background-color: #294128;
  border-color: #294128;
}

.placeholder-delay {
  transition-delay: 1.8s;
  transition-duration: 0.5s;
  transition-property: color, background-color, border-color;
}

.green {
  --square-color: #538d4e;
}

.yellow {
  --square-color: #b59f3b;
}

.gray {
  --square-color: #3a3a3c;
}

.green,
.yellow,
.gray {
  animation: flipSquare 0.4s 1 forwards;
}


.solved:nth-child(2) {
  animation-delay: 0.4s;
}

.solved:nth-child(3) {
  animation-delay: 0.8s;
}

.solved:nth-child(4) {
  animation-delay: 1.2s;
}

.solved:nth-child(5) {
  animation-delay: 1.6s;
}

@keyframes flipSquare {
  0% {
    transform: rotateX(90deg);
    border-color: #282829;
  }

  100% {
    transform: rotateX(0deg);
    background-color: var(--square-color);
    border-color: var(--square-color);
  }
}

.row-error {
  animation: error 500ms 1
}

@keyframes error {

  6%,
  90% {
    transform: translateX(-1px)
  }

  20%,
  80% {
    transform: translateX(2px)
  }

  30%,
  50%,
  70% {
    transform: translateX(-4px)
  }

  40%,
  60% {
    transform: translateX(4px)
  }
}


.message {
  display: block;
  position: absolute;
  top: -50px;
  padding: 13px 11px;
  border-radius: 5px;
  font-weight: bold;
  font-size: 15px;
  background: white;
  color: #0c0c0d;
  opacity: 0;
}

.error-message {
  animation: errorMessage 2s 1;
}

@keyframes errorMessage {

  25%,
  75% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

#time-bar {
  width: 100%;
  border: 2px solid #282829;
  height: 20px;
}

#progress {
  width: 100%;
  height: 100%;
  background: rgb(99, 99, 99);
}

.controls {
  width: 100%;
  height: min(14vw, 8vh, 50px);

  margin-top: 10px;
  justify-content: space-around;
  gap: 5px;

  text-align: center;
  color: white;
  background: none;
  font-weight: bolder;
  font-size: 15px;
  font-size: min(5vw, 2vh, 15px);
  visibility: hidden;

  opacity: 0;
  transition: opacity 0.5s;
}


input {
  all: unset;
  height: 100%;
  width: 100%;
  color: white;
  box-sizing: border-box;
}

.controls>* {
  flex: 1;
  /* flex-basis: 0; */
  border: 2px solid #282829;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}


.time-container {
  display: inline-flex;
  width: min-content;
  align-items: center;
  width: 10px;
  position: relative;
  transition: border-color 500ms;
  height: 100%;
}

.time-container span {
  display: none;
}

.time-container input {
  text-align: left;
  width: min-content;
  padding-left: 50px;
  z-index: 2;
}

.time-container :not(input:placeholder-shown)+span {
  position: absolute;
  padding-left: 5px;
  display: block;
  right: 20%;
}


#new-game {
  cursor: pointer;
  transition: background 200ms, border-color 500ms;
}


#new-game:hover,
.time-container:hover {
  border-color: rgb(90, 90, 90);
}


.time-container:focus-within,
#new-game:focus-visible {
  border-color: rgb(185, 185, 185);
}


#new-game:active {
  transition: none;
  background-color: rgb(152, 152, 152);
  border-color: rgb(152, 152, 152);

}

.visible-delay,
.visible {
  opacity: 1;
  visibility: visible;
}

.visible-delay {
  transition: background-color 300ms, border-color 1s, color 1s, opacity 2s 1.6s, visibility 0s 2s;
}

.visible {
  transition: background-color 300ms, border-color 1s, color 1s, opacity 2s, visibility 0s 0s;
}